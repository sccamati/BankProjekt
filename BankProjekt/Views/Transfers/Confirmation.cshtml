@model BankProjekt.Models.Transfer
@using BankProjekt.Models;
@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

<div>
    <h4>Transfer</h4>
    <hr />
    <dl class="dl-horizontal">

        @foreach (var number in (IEnumerable<String>)ViewBag.BankNumbers)
        {
            if (Model.TransferType.ToString().Equals("Transfer") && Model.ReceiversNumber.Equals(number))
            {
        <dt>
            @Html.DisplayNameFor(model => model.AddressesName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AddressesName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AddressesNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AddressesNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReceiverBalance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiverBalance)
        </dd>
                break;
            }
            else if (Model.TransferType.ToString().Equals("Transfer") && Model.AddressesNumber.Equals(number))
            {
        <dt>
            @Html.DisplayNameFor(model => model.ReceiversName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiversName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReceiversNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiversNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AddresseBalance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AddresseBalance)
        </dd>
                break;
            }

            else if (Model.TransferType.ToString().Equals("Payment") || Model.TransferType.ToString().Equals("Credit"))
            {
        <dt>
            @Html.DisplayNameFor(model => model.ReceiversName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiversName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReceiversNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiversNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ReceiverBalance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ReceiverBalance)
        </dd>
                break;
            }
            else if (Model.TransferType.ToString().Equals("PayOff") || Model.TransferType.ToString().Equals("CreditPayment"))
            {
        <dt>
            @Html.DisplayNameFor(model => model.AddressesName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AddressesName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AddressesNumber)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AddressesNumber)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.AddresseBalance)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.AddresseBalance)
        </dd>
                break;
            }
        }
        <dt>
            @Html.DisplayNameFor(model => model.Cash)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Cash)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Title)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Title)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Date)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Date)
        </dd>
    </dl>
</div>