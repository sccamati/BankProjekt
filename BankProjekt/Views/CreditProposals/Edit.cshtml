@model BankProjekt.Models.CreditProposal

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>

<script>
    function myFunction() {
        var cash = document.getElementById("Cash");
        var months = document.getElementById("NumberOfMonths");
        var pom;
        pom = cash.value * 1.1;

        document.getElementById("totalPayment").value = pom.toFixed(2);
        document.getElementById("monthPayment").value = (pom / months.value).toFixed(2);
    }

</script>

@using (Html.BeginForm("Edit", "CreditProposals", FormMethod.Post,
    new { enctype = "multipart/form-data" }))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>CreditProposal</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <img src="~/Pictures/@Html.DisplayFor(model => model.Picture)" alt="" height="300" width="350" />
    <div class="form-group">
        @Html.LabelFor(model => model.Picture, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Picture, new { htmlAttributes = new { @class = "form-control", type = "hidden"} })
            <input class="form-control" type="file" name="File" accept="image/x-png,image/jpeg"/>
            @Html.ValidationMessageFor(model => model.Picture, "", new { @class = "text-danger" })
        </div>
    </div>

    @Html.EditorFor(model => model.BankAccountId, new { htmlAttributes = new { @class = "form-control", type="hidden" } })

    <div class="form-group">
        @Html.LabelFor(model => model.Cash, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Cash, new { htmlAttributes = new { @class = "form-control", onkeyup = "myFunction()" } })
            @Html.ValidationMessageFor(model => model.Cash, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.NumberOfMonths, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.NumberOfMonths, new { htmlAttributes = new { @class = "form-control", onkeyup = "myFunction()" } })
            @Html.ValidationMessageFor(model => model.NumberOfMonths, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Total Payment", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input class="form-control" type="text" id="totalPayment" readonly />
        </div>
    </div>

    <div class="form-group">
        @Html.Label("Monthly Payment", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input class="form-control" type="text" id="monthPayment" readonly />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>